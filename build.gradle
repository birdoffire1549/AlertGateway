// **** This build.gradle file was built to be used with gradle version 8.x ****
// **** Author: Scott Griffis                                               ****
// **** Date: 3/20/2024                                                     ****

plugins {
    id 'org.springframework.boot' version '2.7.8' // A working application connot be built without this.
    id 'eclipse'
    id 'java-library'
    id "com.netflix.nebula.ospackage" version "11.8.1"
    id 'maven-publish'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

Properties props = new Properties()
props.load(new FileInputStream("src/main/resources/version.properties"))
def appVersion =  props.get('appVersion') // App Version should only be modified in the version.properties file mentioned above.
version = appVersion

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    
    test {
        java.srcDirs = ['src/test/java']
        resources.srcDirs = ['src/test/resources']
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-web:2.7.8') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.boot:spring-boot-starter-log4j:1.3.8.RELEASE'
    implementation 'com.sun.mail:javax.mail:1.6.2'
    
    testImplementation 'junit:junit:4.12' // Used by JUnit tests
}

jar {
    manifest {
        attributes 'Implementation-Title': 'AlertGateway',
                   'Implementation-Version': version,
                   'Implementation-Vendor': 'FirebirdCSS',
                   'Build-Date': (new Date()).format('MM-dd-yyyy HH:mm:ss'),
                   'Main-Class': 'com.firebirdcss.service.alert_gateway.ApplicationMain'
    }
    
    exclude('application.properties')
    
    archiveBaseName = 'alert-gateway'
}

bootJar {
    exclude('application.properties')
    
    bootJar.archiveFileName = 'alert-gateway.jar'
}

task myDeb(dependsOn: build, type: Deb) {
    /*
        PLEASE NOTE: I have tried to make the deb file
        generated by this task, not take control of the 
        '/opt' and '/usr/lib/systemd/system' directories, 
        but no matter what I do it seems to change nothing 
        and whenever the package is removed from the system 
        the '/opt' directory gets deleted if it is empty, and 
        the '/usr/lib/systemd/system' directory causes a warning
        that it cannot be deleted because it isn't empty.
        
        Yah, not ideal but I am starting to think this is the best I
        can expect from the ospackage Gradle plugin.
    */
    packageName = 'alert-gateway'
    version = appVersion
    release = 1
    
    preInstall file('scripts/preInstall.sh')
    postInstall file('scripts/postInstall.sh')
    preUninstall file('scripts/preRemove.sh')
    postUninstall file('scripts/postRemove.sh')
    
    requires('java-runtime-headless', '17', GREATER | EQUAL)
    
    directory("/opt/alert_gateway", 0550)
    directory("/opt/alert_gateway/data", 0660)
    directory("/opt/alert_gateway/config", 0440)
    directory("/opt/alert_gateway/bin", 0550)
    directory("/opt/alert_gateway/logs", 0550)
    
    from(bootJar.outputs.files) {
        into '/opt/alert_gateway'
        fileMode 0550
    }
    
    from('src/main/resources') {
        exclude 'version.properties'
        exclude 'log4j.properties'
        
        // Sick of broken crappy plugins, and the equally
        // crapy workarounds that never actually work!!!
        // Leaving below for future reference:
        // ------------------------------------
        // fileType CONFIG | NOREPLACE // Should work but doesn't.
        // fileType CONFIG.set(NOREPLACE.flag()) // Suggested online but doesn't work.
        // fileType=CONFIG // Seemed like this might work but didn't
        // ----
        // Below worked for someone else online but not me. 
        // Maybe using wrong but who knows because no one ever shows 
        // how they actually use something instead they just throw it
        // out there like everone should know how and were to use it just
        // by the sheer fact it exists!
        // ----
        // configurationFile("/opt/config/application.properties")
          
        fileMode 0440
        
        into '/opt/alert_gateway/config'
    }
    
    from('scripts/alert-gateway.service') {
        addParentDirs = false
        user 'root'
        fileMode 0644
        
        into '/usr/lib/systemd/system'
    }
}

task myRpm(dependsOn: build, type: Rpm) {
    packageName 'alert-gateway'
    version appVersion
    release '1'
    arch I386
    os LINUX
    
    requires('java-runtime-headless', '17', GREATER | EQUAL)
    
    preInstall file('scripts/preInstall.sh')
    postInstall file('scripts/postInstall.sh')
    preUninstall file('scripts/preRemove.sh')
    
    directory("/opt/alert_gateway", 0550)
    directory("/opt/alert_gateway/data", 0660)
    directory("/opt/alert_gateway/config", 0440)
    directory("/opt/alert_gateway/bin", 0550)
    directory("/opt/alert_gateway/logs", 0550)
    
    into '/opt/alert_gateway'
    
    from(bootJar.outputs.files) {
        into '/opt/alert_gateway'
        fileMode 0550
    }
    
    from('src/main/resources') {
        fileType CONFIG | NOREPLACE
        exclude 'version.properties'
        exclude 'log4j.properties'
        into 'config'
        fileMode 0440
    }
    
    from('scripts/alert-gateway.service') {
        addParentDirs = false
        into '/usr/lib/systemd/system'
        user 'root'
        fileMode 0644
    }
}

/*
    NOTE: I am not using the below publishing task in the repo but I plan to
    leave it here as is because it took quite a bit of research and trial-and-error
    to get it right and I might want to reference it later for some other project.
*/
/*
publishing {
    publications {
        deb(MavenPublication) {
            groupId = 'com.firebirdcss.service'
            artifactId = "alert-gateway-deb"
            artifact "build/distributions/alert-gateway_${version}-1_all.deb"
        }
        
        rpm(MavenPublication) {
            groupId = 'com.firebirdcss.service'
            artifactId = "alert-gateway-rpm"
            artifact "build/distributions/alert-gateway-${version}-1.i386.rpm"
        }
        
        maven(MavenPublication) {
            groupId = 'com.firebirdcss.service'
            artifactId = 'alert-gateway'
            
            from components.java
        }
    }
    
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/birdoffire1549/AlertGateway"
            version  = appVersion
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }

        }
    }
}
*/